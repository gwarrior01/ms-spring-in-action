spring:
  config:
    import: "configserver:"
  profiles:
    active: dev
  cloud:
    config:
      uri: http://localhost:8071
    openfeign:
      client:
        config:
          default:
            logger-level: full
  security:
    oauth2:
      client:
        registration:
          license:
            client-id: license
            client-secret: 5V49sw624U6ZbCEvtlKxlpGOxnejfUuf
            authorization-grant-type: client_credentials
            provider: keycloak
        provider:
          keycloak:
            token-uri: http://localhost:9080/realms/twopages-realm/protocol/openid-connect/token

  application:
    name: licensing-service

resilience4j.circuitbreaker:
  instances:
    licenseService:
      registerHealthIndicator: true
      slidingWindowSize: 5
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 60s
      failureRateThreshold: 50
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
    organizationService:
      registerHealthIndicator: true
      slidingWindowSize: 6
      permittedNumberOfCallsInHalfOpenState: 4
      waitDurationInOpenState: 20s
      failureRateThreshold: 60

resilience4j.ratelimiter:
  instances:
    licenseService:
      limitForPeriod: 5
      limitRefreshPeriod: 5000
      timeoutDuration: 1000ms

resilience4j.retry:
  instances:
    retryLicenseService:
      maxAttempts: 5
      waitDuration: 10000
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.thread-pool-bulkhead:
  instances:
    bulkheadLicenseService:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1