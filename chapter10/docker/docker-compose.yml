version: '3.8'
services:
  database:
    image: postgres:16.1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tech
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NODE_ID: 1
      CLUSTER_ID: enikrOwZTYSqcPfSS47W_Q
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5

  kafkaui:
    image: provectuslabs/kafka-ui:v0.7.0
    restart: "no"
    ports:
      - "8989:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: enikrOwZTYSqcPfSS47W_Q
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit -1
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 5

#  redis:
#    image: redis:8.0.2
#    restart: "no"
#    ports:
#      - "6379:6379"
#    healthcheck:
#      test: redis-cli ping
#      interval: 10s
#      timeout: 5s
#      start_period: 10s
#      retries: 5

networks:
  backend:
    driver: bridge