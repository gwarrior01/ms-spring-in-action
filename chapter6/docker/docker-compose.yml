version: '3.8'
services:
  database:
    image: postgres:16.1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tech
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql

#  configserver:
#    image: docker.io/library/configserver_6
#    ports:
#       - "8071:8071"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8071/actuator/health" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 15s

#  eurekaserver:
#    image: docker.io/library/eurekaserver_6
#    ports:
#      - "8070:8070"
#    depends_on:
#      configserver:
#        condition: service_healthy

#  licensingservice:
#    image: ostock/licensing-service:0.0.3-SNAPSHOT
#    environment:
#      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8071"
#      CONFIGSERVER_PORT:   "8071"
#      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY:       "IMSYMMETRIC"
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_started
#    ports:
#      - "8080:8080"
#    networks:
#      - backend
#  organizationservice:
#    image: ostock/organization-service:0.0.1-SNAPSHOT
#    environment:
#      PROFILE: "dev"
#      CONFIGSERVER_URI: "http://configserver:8071"
#      CONFIGSERVER_PORT:   "8071"
#      DATABASESERVER_PORT: "5432"
#      ENCRYPT_KEY:       "IMSYMMETRIC"
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_started
#    ports:
#      - "8081:8081"
